---
import MainLayout from '../layouts/MainLayout.astro';
import MainLayout from '../layouts/MainLayout.astro';
import Vision from '../components/Vision.astro';
import Entorno from '../components/Entorno.astro';
import Programa from '../components/Programa.astro';
import Diseno from '../components/Diseno.astro';
import Analisis from '../components/Analisis.astro';
import MemoriaUrbanistica from '../components/MemoriaUrbanistica.astro';
import MemoriaEstructural from '../components/MemoriaEstructural.astro';
import Pliego from '../components/Pliego.astro';
---

<MainLayout title="CRIAGA - Explorador del Proyecto">
    <main class="container mx-auto px-4 md:px-6 py-8">
        <Vision />
        <Entorno />
        <Programa />
        <Diseno />
        <Analisis />
        <MemoriaUrbanistica />
        <MemoriaEstructural />
        <Pliego />
    </main>
</MainLayout>

    <script is:inline>
        document.addEventListener('DOMContentLoaded', function () {
            // Data
            const budgetData = {
                labels: ['Acond. Terreno', 'Estructuras', 'Urbanización', 'Instalaciones', 'Cimentaciones', 'Otros'],
                datasets: [{
                    label: 'Distribución del Presupuesto',
                    data: [27.42, 22.28, 14.21, 12.27, 9.70, 14.12],
                    backgroundColor: ['#8C1D18', '#A6231D', '#BF4A3F', '#D97566', '#F2A499', '#E5E5E5'],
                    borderColor: '#FCFBF8',
                    borderWidth: 3,
                    hoverOffset: 4
                }]
            };

            const superficiesData = {
                labels: ['Carballeira', 'Viñedos', 'Zona Ext. Vacas', 'Granja', 'Eira', 'Caminos', 'Cultivos', 'Invernaderos'],
                datasets: [{
                    label: 'Superficie (m²)',
                    data: [12359.98, 4993.75, 4181.67, 2989.32, 2287.89, 1511.95, 1449.79, 432.00],
                    backgroundColor: '#BF4A3F',
                    borderColor: '#8C1D18',
                    borderWidth: 1
                }]
            };

            const breedsData = [
                { id: 'cachena', name: 'Cachena', img: 'https://placehold.co/400x250/EFE8D8/8C1D18?text=Vaca+Cachena' },
                { id: 'caldela', name: 'Caldelá', img: 'https://placehold.co/400x250/EFE8D8/8C1D18?text=Vaca+Caldelá' },
                { id: 'frieiresa', name: 'Frieiresa', img: 'https://placehold.co/400x250/EFE8D8/8C1D18?text=Vaca+Frieiresa' },
                { id: 'limia', name: 'Limiá', img: 'https://placehold.co/400x250/EFE8D8/8C1D18?text=Vaca+Limiá' },
                { id: 'rubia', name: 'Rubia Galega', img: 'https://placehold.co/400x250/EFE8D8/8C1D18?text=Rubia+Galega' },
                { id: 'vianesa', name: 'Vianesa', img: 'https://placehold.co/400x250/EFE8D8/8C1D18?text=Vaca+Vianesa' }
            ];

            const sliderData = [
                { description: '1. Preexistencias y Parcela', diagram: '<div class="h-24 w-16 bg-gray-400 opacity-50 relative" style="left: -100px; top: 40px;"></div><div class="h-16 w-12 bg-gray-400 opacity-50 relative" style="left: 100px; top: -20px;"></div><p class="absolute bottom-2 text-xs text-gray-500">Dos edificaciones en ruinas en parcelas separadas.</p>' },
                { description: '2. Idea de Volumen Inicial', diagram: '<div class="h-12 w-64 bg-red-300 absolute" style="top: 20px;"></div><p class="absolute bottom-2 text-xs text-gray-500">Un gran volumen longitudinal para la granja.</p>' },
                { description: '3. Idea Estructural Inicial', diagram: '<div class="flex gap-2 h-24">{Array(10).fill(0).map(() => `<div class="w-2 bg-red-400"></div>`).join("")}</div><p class="absolute bottom-2 text-xs text-gray-500">Secuencia de muros permeables.</p>' },
                { description: '4. Adaptación a la Topografía', diagram: '<div class="h-32 w-64 bg-red-300 absolute" style="clip-path: polygon(0 20%, 100% 0, 100% 80%, 0 100%);"></div><p class="absolute bottom-2 text-xs text-gray-500">El volumen se quiebra para seguir las curvas de nivel.</p>' },
                { description: '5. Desarrollo y Estado Final', diagram: '<div class="h-32 w-64 bg-red-500 relative" style="clip-path: polygon(0 20%, 100% 0, 100% 80%, 0 100%);"><div class="absolute top-0 left-0 w-full h-4 bg-green-500"></div></div><p class="absolute bottom-2 text-xs text-gray-500">Edificio final con cubierta vegetal, integrado en el paisaje.</p>' },
            ];

            // Chart Initialization
            const budgetChartElement = document.getElementById('budgetChart');
            if (budgetChartElement) {
                const ctxBudget = budgetChartElement.getContext('2d');
                new Chart(ctxBudget, { type: 'doughnut', data: budgetData, options: { responsive: true, maintainAspectRatio: false, plugins: { legend: { position: 'right', labels: { font: { family: "'Inter', sans-serif" }}}, tooltip: { callbacks: { label: (c) => `${c.label}: ${c.parsed}%` }}} }});
            }

            const superficiesChartElement = document.getElementById('superficiesChart');
            if (superficiesChartElement) {
                const ctxSuperficies = superficiesChartElement.getContext('2d');
                new Chart(ctxSuperficies, { type: 'bar', data: superficiesData, options: { indexAxis: 'y', responsive: true, maintainAspectRatio: false, plugins: { legend: { display: false } }, scales: { x: { beginAtZero: true, title: { display: true, text: 'Superficie (m²)' } } } } });
            }

            // Accordion
            const accordionContainer = document.getElementById('accordion-container');
            if (accordionContainer) {
                const accordionData = [
                    { title: 'DB-SI: Seguridad en caso de Incendio', content: 'El proyecto cumple con las exigencias del DB-SI, considerando la granja un espacio exterior abierto. Se definen sectores de incendio para zonas cerradas como la sala de control (Riesgo Bajo). Se dota de extintores, B.I.E., hidrantes y sistema de detección y alarma. La estructura principal (muros y losa de hormigón) garantiza una resistencia al fuego R-90.' },
                    { title: 'DB-SUA: Seguridad de Utilización y Accesibilidad', content: 'Se garantiza la seguridad frente a caídas con pavimentos de clase 3 (Rd>45). Los desniveles se resuelven con rampas de pendiente controlada (<12%). Aunque no es de obligado cumplimiento por el uso agrario, el diseño de la planta baja es accesible. Se instala un sistema de protección contra el rayo de Nivel 3.' },
                    { title: 'DB-HS: Salubridad', content: 'Se asegura la protección frente a la humedad en muros y soleras en contacto con el terreno, y en la cubierta vegetal. La ventilación es principalmente natural. Se proyecta una red de saneamiento para purines con tratamiento y depuración por lagunaje, y una red separada para el aseo. El edificio se considera exento de cumplir la protección frente al radón por su condición de espacio abierto.' },
                    { title: 'DB-HE: Ahorro de Energía', content: 'El proyecto está exento de cumplir las exigencias de limitación de consumo (HE0, HE1, HE2) por ser un edificio agrícola de baja demanda energética. No obstante, el diseño bioclimático (cubierta vegetal, ventilación natural) contribuye a un uso racional de la energía.' }
                ];
                accordionData.forEach(item => {
                    const accordionItem = document.createElement('div');
                    accordionItem.className = 'bg-white border border-gray-200 rounded-lg';
                    accordionItem.innerHTML = `<button class="accordion-header w-full flex justify-between items-center p-4 text-left font-semibold"><span>${item.title}</span><span class="transform transition-transform duration-300">▼</span></button><div class="accordion-content px-4 pb-4 text-gray-700"><p>${item.content}</p></div>`;
                    accordionContainer.appendChild(accordionItem);
                });
                document.querySelectorAll('.accordion-header').forEach(button => button.addEventListener('click', () => {
                    const content = button.nextElementSibling;
                    const icon = button.querySelector('span:last-child');
                    const isOpening = !content.style.maxHeight;
                    document.querySelectorAll('.accordion-content').forEach(c => c.style.maxHeight = null);
                    document.querySelectorAll('.accordion-header span:last-child').forEach(i => i.style.transform = 'rotate(0deg)');
                    if (isOpening) {
                        content.style.maxHeight = content.scrollHeight + 'px';
                        icon.style.transform = 'rotate(180deg)';
                    }
                }));
            }

            // Pliego
            const pliegoContent = document.getElementById('pliego-content');
            if (pliegoContent) {
                const pliegoData = {
                    muro: { title: 'Unidad EHN030B: Muro de hormigón armado', content: `<p class="mb-4"><strong>Descripción:</strong> Muro de hormigón armado de 40 cm de espesor medio, realizado con hormigón HA-30/F/12/XC4 fabricado en central y vertido con cubilote. Armado con acero UNE-EN 10080 B 500 S (cuantía aprox. 51,4 kg/m³).</p><p class="mb-4"><strong>Normativa:</strong> Elaboración, transporte y puesta en obra del hormigón según el Código Estructural.</p><h4 class="font-semibold mb-2">Proceso de Ejecución:</h4><ol class="list-decimal list-inside space-y-1"><li>Replanteo y comprobación de armaduras de espera.</li><li>Colocación de armadura principal con separadores homologados.</li><li>Vertido y compactación del hormigón, evitando la disgregación.</li><li>Curado del hormigón para garantizar la resistencia.</li></ol>` },
                    viga: { title: 'Unidad EHV030: Viga de hormigón armado', content: `<p class="mb-4"><strong>Descripción:</strong> Viga descolgada de hormigón armado, realizada con hormigón HA-25/F/20/X0 fabricado en central y vertido con cubilote. Armado con acero UNE-EN 10080 B 500 S (cuantía aprox. 112,7 kg/m³).</p><p class="mb-4"><strong>Normativa:</strong> Código Estructural y NTE-EME (Encofrados).</p><h4 class="font-semibold mb-2">Proceso de Ejecución:</h4><ol class="list-decimal list-inside space-y-1"><li>Montaje de sistema de encofrado con superficie tratada.</li><li>Colocación de la armadura con separadores, asegurando recubrimientos.</li><li>Vertido y compactación del hormigón.</li></ol>` },
                    losa: { title: 'Unidad EHL030: Losa maciza de hormigón armado', content: `<p class="mb-4"><strong>Descripción:</strong> Losa maciza horizontal de 35 cm de canto, realizada con hormigón HA-25/F/20/X0. Armado con acero UNE-EN 10080 B 500 S (cuantía aprox. 28,7 kg/m²).</p><p class="mb-4"><strong>Normativa:</strong> Código Estructural y NTE-EME (Encofrados).</p><h4 class="font-semibold mb-2">Proceso de Ejecución:</h4><ol class="list-decimal list-inside space-y-1"><li>Montaje de sistema de encofrado continuo sobre puntales.</li><li>Colocación de armaduras (inferior, superior, de reparto) con separadores.</li><li>Vertido continuo y compactación del hormigón.</li></ol>` }
                };
                const pliegoButtons = document.querySelectorAll('.pliego-btn');
                function updatePliegoContent(target) {
                    if (pliegoContent && pliegoData[target]) {
                        pliegoContent.innerHTML = `<h3 class="text-2xl font-bold mb-4">${pliegoData[target].title}</h3>${pliegoData[target].content}`;
                    }
                }
                pliegoButtons.forEach(button => button.addEventListener('click', () => {
                    const target = button.dataset.target;
                    updatePliegoContent(target);
                    pliegoButtons.forEach(btn => { btn.classList.remove('btn-primary'); btn.classList.add('bg-gray-200', 'text-gray-700'); });
                    button.classList.add('btn-primary'); button.classList.remove('bg-gray-200', 'text-gray-700');
                }));
                updatePliegoContent('muro'); // Initial state
            }

            // Breed Gallery Initialization
            const breedButtonContainer = document.querySelector('#programa .flex-wrap');
            const breedDisplay = document.getElementById('breed-display');
            if (breedButtonContainer && breedDisplay) {
                breedsData.forEach(breed => {
                    const button = document.createElement('button');
                    button.className = 'breed-btn bg-gray-200 text-gray-700 px-3 py-1 rounded-full text-sm';
                    button.dataset.id = breed.id;
                    button.textContent = breed.name;
                    breedButtonContainer.appendChild(button);
                });
                function updateBreedInfo(id) {
                    const breed = breedsData.find(b => b.id === id);
                    if (breed) {
                        breedDisplay.innerHTML = `<img src="${breed.img}" alt="Imagen de ${breed.name}" class="w-full h-auto object-cover rounded-lg mb-4"><h4 class="text-xl font-bold">${breed.name}</h4><p class="text-gray-600">Raza autóctona en programa de cría extensiva.</p>`;
                    }
                    document.querySelectorAll('.breed-btn').forEach(btn => {
                        btn.classList.toggle('btn-primary', btn.dataset.id === id);
                         btn.classList.toggle('bg-gray-200', btn.dataset.id !== id);
                         btn.classList.toggle('text-gray-700', btn.dataset.id !== id);
                    });
                }
                breedButtonContainer.addEventListener('click', (e) => {
                    if(e.target.classList.contains('breed-btn')) {
                        updateBreedInfo(e.target.dataset.id);
                    }
                });
                if (breedsData.length > 0) {
                    updateBreedInfo(breedsData[0].id); // Initial state
                }
            }

            // Design Slider Initialization
            const sliderDiagram = document.getElementById('slider-diagram-content');
            const slideDescription = document.getElementById('slide-description');
            const prevBtn = document.getElementById('prev-slide');
            const nextBtn = document.getElementById('next-slide');

            if (sliderDiagram && slideDescription && prevBtn && nextBtn) {
                let currentSlide = 0;
                function updateSlider() {
                    const slide = sliderData[currentSlide];
                    if (slide) {
                        sliderDiagram.innerHTML = slide.diagram.replace(/{Array\(([^)]+)\)\.fill\(([^)]+)\)\.map\(([^)]+)\)\.join\(([^)]+)\)}/g, (match, count, fillVal, mapFunc, joinVal) => new Function('return Array(' + count + ').fill(' + fillVal + ').map(' + mapFunc + ').join(' + joinVal + ')')());
                        slideDescription.textContent = slide.description;
                    }
                }

                prevBtn.addEventListener('click', () => {
                    currentSlide = (currentSlide - 1 + sliderData.length) % sliderData.length;
                    updateSlider();
                });
                nextBtn.addEventListener('click', () => {
                    currentSlide = (currentSlide + 1) % sliderData.length;
                    updateSlider();
                });
                if (sliderData.length > 0) {
                    updateSlider(); // Initial state
                }
            }

            // Nav Scrollspy
            const sections = document.querySelectorAll('section');
            const navLinks = document.querySelectorAll('header .nav-link'); // Scoped to header nav links
            if (sections.length > 0 && navLinks.length > 0) {
                window.addEventListener('scroll', () => {
                    let current = sections[0].getAttribute('id') || ''; // Default to first section
                    sections.forEach(section => {
                        const sectionTop = section.offsetTop;
                        if (pageYOffset >= sectionTop - 80) { // 80 is approx header height
                            current = section.getAttribute('id');
                        }
                    });
                    navLinks.forEach(link => {
                        link.classList.remove('active');
                        if (link.getAttribute('href') && link.getAttribute('href').substring(1) === current) {
                            link.classList.add('active');
                        }
                    });
                });
            }

            // Mobile menu toggle
            const mobileMenuButton = document.getElementById('mobile-menu-button');
            const mobileMenu = document.getElementById('mobile-menu');
            if (mobileMenuButton && mobileMenu) {
                mobileMenuButton.addEventListener('click', () => mobileMenu.classList.toggle('hidden'));
                document.querySelectorAll('#mobile-menu .nav-link-mobile').forEach(link => { // Scoped to mobile menu links
                    link.addEventListener('click', () => mobileMenu.classList.add('hidden'));
                });
            }
        });
    </script>
</MainLayout>
