---
export interface Props {
  code: string;
  language?: string;
  title?: string;
}

const { code, language = 'text', title } = Astro.props;
---

<div class="bg-gray-900 rounded-lg overflow-hidden shadow-lg">
  {title && (
    <div class="bg-gray-800 px-4 py-2 flex justify-between items-center">
      <span class="text-gray-300 text-sm font-medium">{title}</span>
      <button 
        class="copy-btn text-gray-400 hover:text-white transition-colors duration-200 text-sm"
        data-code={code}
        aria-label="Copiar cÃ³digo"
      >
        <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
        </svg>
        Copiar
      </button>
    </div>
  )}
  <pre class="p-4 overflow-x-auto"><code class={`language-${language} text-sm text-gray-100`}>{code}</code></pre>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.copy-btn').forEach(button => {
      button.addEventListener('click', async () => {
        const code = button.getAttribute('data-code');
        if (code) {
          try {
            await navigator.clipboard.writeText(code);
            const originalText = button.innerHTML;
            button.innerHTML = '<svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path></svg>Copiado';
            setTimeout(() => {
              button.innerHTML = originalText;
            }, 2000);
          } catch (err) {
            console.error('Error copying to clipboard:', err);
          }
        }
      });
    });
  });
</script>