---
const navItems = [
  { href: '#vision', label: 'Visión' },
  { href: '#entorno', label: 'Entorno' },
  { href: '#programa', label: 'Programa' },
  { href: '#diseno', label: 'Diseño' },
  { href: '#analisis', label: 'Análisis' },
  { href: '#pliego', label: 'Pliego' }
];
---

<header class="bg-white/90 backdrop-blur-md sticky top-0 z-50 shadow-sm border-b border-criaga-gray-light">
  <nav class="container mx-auto px-6 py-4">
    <div class="flex justify-between items-center">
      <div class="flex items-center space-x-4">
        <h1 class="text-2xl font-bold font-serif text-criaga-red">CRIAGA</h1>
        <div class="hidden sm:block text-sm text-gray-500">
          Centro de Cría de Razas Galegas
        </div>
      </div>
      
      <!-- Desktop Navigation -->
      <div class="hidden lg:flex space-x-8">
        {navItems.map(item => (
          <a 
            href={item.href} 
            class="nav-link text-criaga-gray hover:text-criaga-red transition-colors duration-300 font-medium border-b-2 border-transparent hover:border-criaga-red pb-1"
          >
            {item.label}
          </a>
        ))}
      </div>
      
      <!-- Search Button -->
      <button 
        id="search-toggle" 
        class="hidden md:flex items-center space-x-2 px-4 py-2 bg-criaga-gray-light rounded-lg hover:bg-gray-300 transition-colors duration-200"
        aria-label="Buscar en el documento"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
        </svg>
        <span class="text-sm">Buscar</span>
      </button>
      
      <!-- Mobile Menu Button -->
      <button 
        id="mobile-menu-toggle" 
        class="lg:hidden p-2 rounded-lg hover:bg-criaga-gray-light transition-colors duration-200"
        aria-label="Abrir menú de navegación"
      >
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>
    </div>
    
    <!-- Mobile Navigation -->
    <div id="mobile-menu" class="hidden lg:hidden mt-4 pb-4 border-t border-criaga-gray-light">
      <div class="flex flex-col space-y-3 pt-4">
        {navItems.map(item => (
          <a 
            href={item.href} 
            class="nav-link-mobile text-criaga-gray hover:text-criaga-red transition-colors duration-300 font-medium py-2"
          >
            {item.label}
          </a>
        ))}
      </div>
    </div>
  </nav>
</header>

<!-- Search Modal -->
<div id="search-modal" class="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 hidden">
  <div class="flex items-start justify-center min-h-screen pt-16 px-4">
    <div class="bg-white rounded-lg shadow-xl w-full max-w-2xl">
      <div class="p-6">
        <div class="flex items-center justify-between mb-4">
          <h3 class="text-lg font-semibold text-criaga-red">Buscar en el documento</h3>
          <button id="search-close" class="text-gray-400 hover:text-gray-600">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>
        <input 
          type="text" 
          id="search-input" 
          placeholder="Escriba para buscar..." 
          class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-criaga-red focus:border-transparent outline-none"
        >
        <div id="search-results" class="mt-4 max-h-96 overflow-y-auto"></div>
      </div>
    </div>
  </div>
</div>

<script>
  // Navigation functionality
  document.addEventListener('DOMContentLoaded', function() {
    // Mobile menu toggle
    const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
    const mobileMenu = document.getElementById('mobile-menu');
    
    mobileMenuToggle?.addEventListener('click', () => {
      mobileMenu?.classList.toggle('hidden');
    });
    
    // Close mobile menu when clicking on links
    document.querySelectorAll('.nav-link-mobile').forEach(link => {
      link.addEventListener('click', () => {
        mobileMenu?.classList.add('hidden');
      });
    });
    
    // Search modal functionality
    const searchToggle = document.getElementById('search-toggle');
    const searchModal = document.getElementById('search-modal');
    const searchClose = document.getElementById('search-close');
    const searchInput = document.getElementById('search-input');
    
    searchToggle?.addEventListener('click', () => {
      searchModal?.classList.remove('hidden');
      searchInput?.focus();
    });
    
    searchClose?.addEventListener('click', () => {
      searchModal?.classList.add('hidden');
    });
    
    // Close modal when clicking outside
    searchModal?.addEventListener('click', (e) => {
      if (e.target === searchModal) {
        searchModal.classList.add('hidden');
      }
    });
    
    // Active navigation highlighting
    const sections = document.querySelectorAll('section[id]');
    const navLinks = document.querySelectorAll('.nav-link');
    
    const observerOptions = {
      rootMargin: '-20% 0px -80% 0px',
      threshold: 0
    };
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const id = entry.target.getAttribute('id');
          navLinks.forEach(link => {
            link.classList.remove('text-criaga-red', 'border-criaga-red');
            link.classList.add('text-criaga-gray', 'border-transparent');
            
            if (link.getAttribute('href') === `#${id}`) {
              link.classList.remove('text-criaga-gray', 'border-transparent');
              link.classList.add('text-criaga-red', 'border-criaga-red');
            }
          });
        }
      });
    }, observerOptions);
    
    sections.forEach(section => observer.observe(section));
  });
</script>